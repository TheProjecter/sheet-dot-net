<m:MetroWindow x:Class="SheetGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="clr-namespace:UIControls;assembly=UIControls"
        xmlns:t="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:m="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:vm="clr-namespace:Sheet.GUI.ViewModel"
        Title="Sheet" Height="600" Width="800" Icon="Resources/Images/Logos/logo128.ico" TitleCaps="False" BorderBrush="#FF80BA45" BorderThickness="3"
        Loaded="MetroWindow_Loaded"
        >
    <Window.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="White">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ApplicationAccentBrushSecondary}"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="White"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="White"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource ApplicationAccentBrushSecondary}"/>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ApplicationAccentBrushSecondary}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ApplicationAccentBrushSecondary}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="#3f3f46"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>

                </Style.Triggers>
            </Style>
            <Style x:Key="EditableLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="6,4,4,5"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Grid>
                                <TextBox Name="textBox"
                             Grid.ZIndex="1"
                             Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type Label}}, Path=Content, UpdateSourceTrigger=PropertyChanged}"
                             Opacity="0"
                             BorderThickness="0"/>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="textBox" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <m:MetroWindow.WindowCommands>
        <m:WindowCommands>
            <!--<Button Content="settings" />-->
            <Button>
                <StackPanel Orientation="Horizontal">
                    <s:SearchTextBox Grid.Column="0" Grid.Row="1" Width="150" SearchEventTimeDelay="00:00:02.00"
                HorizontalAlignment="Stretch" />
                </StackPanel>
            </Button>
        </m:WindowCommands>
    </m:MetroWindow.WindowCommands>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu Width="Auto" Height="Auto" Background="#FF60A917" Grid.Row="0" Grid.ColumnSpan="3" Foreground="White">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="_File" HorizontalAlignment="Left">
                <MenuItem Header="_New note" Foreground="Black"/>
                <MenuItem Header="_Delete note" Foreground="Black"/>
                <Separator />
                <MenuItem Foreground="Black">
                    <MenuItem.Header>
                        <DockPanel>
                            <TextBlock>Step</TextBlock>
                            <TextBlock Width="10"></TextBlock>
                            <TextBlock HorizontalAlignment="Right">F2</TextBlock>
                        </DockPanel>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
        </Menu>
        <!--<s:SearchTextBox Grid.Column="0" Grid.Row="1" SearchEventTimeDelay="00:00:02.00"
                HorizontalAlignment="Stretch" />-->
        <TreeView Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Labels}">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type vm:LabelViewModel}">
                    <TextBlock Text="{Binding Path=Text}"/>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
        <GridSplitter HorizontalAlignment="Right" 
                  VerticalAlignment="Stretch" 
                  Grid.Column="1" Grid.Row="1" ResizeBehavior="PreviousAndNext"
                  Width="3" Background="#FF60A917"/>
        <Grid Grid.Column="2" Grid.Row="1" Background="#FF80BA45">
        <TabControl Style="{x:Null}">
            <TabItem x:Name="tab" Style="{x:Null}">
                <TabItem.Header>
                    <t:WatermarkTextBox Grid.Row="0" FontSize="18" BorderThickness="0" Watermark="Set title..."
                                        IsEnabled="{Binding IsSelected, ElementName=tab}" Background="#00000000" CaretBrush="Black"/>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="100"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="1" CornerRadius="5" Padding="2,4" Margin="0,0,2,2">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                        </Border.BorderBrush>
                        <ScrollViewer>
                            <t:RichTextBox SpellCheck.IsEnabled="True" IsDocumentEnabled="True" BorderThickness="0" AcceptsTab="True">
                                <t:RichTextBox.Resources>
                                    <Style TargetType="{x:Type Paragraph}">
                                        <Setter Property="Margin" Value="0,0,0,5"/>
                                    </Style>
                                </t:RichTextBox.Resources>
                                <t:RichTextBoxFormatBarManager.FormatBar>
                                    <t:RichTextBoxFormatBar/>
                                </t:RichTextBoxFormatBarManager.FormatBar>
                                <FlowDocument Language="hu-hu"/>
                            </t:RichTextBox>
                        </ScrollViewer>
                    </Border>
                    <Border Grid.Row="1" BorderThickness="1" CornerRadius="5" Padding="2" Margin="0,0,2,2">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                        </Border.BorderBrush>
                        <StackPanel Orientation="Horizontal">
                            <!--Label Style="{StaticResource EditableLabelStyle}" Background="#FFB0F4A9" HorizontalAlignment="Center" VerticalAlignment="Center" Content="MyLabel"/-->
                            <t:WatermarkTextBox Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,0,0,1" BorderThickness="0" Watermark="Add labels..."/>
                        </StackPanel>
                    </Border>
                    <Border Grid.Row="2" BorderThickness="1" CornerRadius="5" Padding="2" Margin="0,0,2,2">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                        </Border.BorderBrush>
                        <StackPanel Orientation="Horizontal">
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch">
                                <Rectangle Width="80" Height="80" HorizontalAlignment="Left" VerticalAlignment="Center" Canvas.Top="6" Canvas.Left="6" Stroke="#FF919191" RadiusX="5" RadiusY="5" StrokeDashArray="7 7"/>
                                <Line X1="46" Y1="26" X2="46" Y2="46" StrokeThickness="3" Stroke="#FF919191"/>
                                <Line X1="36" Y1="36" X2="56" Y2="36" StrokeThickness="3" Stroke="#FF919191"/>
                                <TextBlock Text="Add" Canvas.Left="6" Canvas.Top="50" Width="80" TextAlignment="Center" Foreground="#FF919191"/>
                                <TextBlock Text="attachment..." Canvas.Left="6" Canvas.Top="63" Width="80" TextAlignment="Center" Foreground="#FF919191"/>
                            </Canvas>
                        </StackPanel>
                    </Border>
                </Grid>
            </TabItem>
                <TabItem x:Name="tab1" Style="{x:Null}">
                    <TabItem.Header>
                        <t:WatermarkTextBox Grid.Row="0" FontSize="18" BorderThickness="0" Watermark="Set title..."
                                        IsEnabled="{Binding IsSelected, ElementName=tab1}" Background="#00000000" CaretBrush="Black"/>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="100"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderThickness="1" CornerRadius="5" Padding="2,4" Margin="0,0,0,2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                            </Border.BorderBrush>
                            <ScrollViewer>
                                <t:RichTextBox SpellCheck.IsEnabled="True" IsDocumentEnabled="True" BorderThickness="0" AcceptsTab="True">
                                    <t:RichTextBox.Resources>
                                        <Style TargetType="{x:Type Paragraph}">
                                            <Setter Property="Margin" Value="0,0,0,5"/>
                                        </Style>
                                    </t:RichTextBox.Resources>
                                    <t:RichTextBoxFormatBarManager.FormatBar>
                                        <t:RichTextBoxFormatBar/>
                                    </t:RichTextBoxFormatBarManager.FormatBar>
                                    <FlowDocument Language="hu-hu"/>
                                </t:RichTextBox>
                            </ScrollViewer>
                        </Border>
                        <Border Grid.Row="1" BorderThickness="1" CornerRadius="5" Padding="2" Margin="0,0,0,2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                            </Border.BorderBrush>
                            <StackPanel Orientation="Horizontal">
                                <!--Label Style="{StaticResource EditableLabelStyle}" Background="#FFB0F4A9" HorizontalAlignment="Center" VerticalAlignment="Center" Content="MyLabel"/-->
                                <t:WatermarkTextBox Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,0,0,1" BorderThickness="0" Watermark="Add labels..."/>
                            </StackPanel>
                        </Border>
                        <Border Grid.Row="2" BorderThickness="1" CornerRadius="5" Padding="2" Margin="0,0,0,2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                            </Border.BorderBrush>
                            <StackPanel Orientation="Horizontal">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch">
                                    <Rectangle Width="80" Height="80" HorizontalAlignment="Left" VerticalAlignment="Center" Canvas.Top="6" Canvas.Left="6" Stroke="#FF919191" RadiusX="5" RadiusY="5" StrokeDashArray="7 7"/>
                                    <Line X1="46" Y1="26" X2="46" Y2="46" StrokeThickness="3" Stroke="#FF919191"/>
                                    <Line X1="36" Y1="36" X2="56" Y2="36" StrokeThickness="3" Stroke="#FF919191"/>
                                    <TextBlock Text="Add" Canvas.Left="6" Canvas.Top="50" Width="80" TextAlignment="Center" Foreground="#FF919191"/>
                                    <TextBlock Text="attachment..." Canvas.Left="6" Canvas.Top="63" Width="80" TextAlignment="Center" Foreground="#FF919191"/>
                                </Canvas>
                            </StackPanel>
                        </Border>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</m:MetroWindow>
